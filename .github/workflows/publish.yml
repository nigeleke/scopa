# Run publish-cycle on main commits.
#
# Publish cycle comprises:
# - publish site, coverage reports and API documentation to https://nigeleke.github.io
#
name: Publish Cycle

on:
  workflow_run:
    workflows: ["Acceptance Cycle"]
    branches: [develop]
    types:
      - completed

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Site
        run: |
          echo "**** Cargo.lock 1"
          cat Cargo.lock
          cargo doc --no-deps
          echo "**** Cargo.lock 2"
          cat Cargo.lock
          cargo install cargo-tarpaulin
          echo "**** Cargo.lock 3"
          cat Cargo.lock
          cargo tarpaulin --out html --output-dir target/coverage
          echo "**** Cargo.lock 4"
          cat Cargo.lock
          mkdir docs0
          mkdir -p docs0/api
          mkdir -p docs0/coverage
          echo "**** Cargo.lock 5"
          cat Cargo.lock
          cp README.md docs0/
          cp -R target/doc/* docs0/api
          cp -R target/coverage/tarpaulin-report.html docs0/coverage/index.html
          cargo tarpaulin --out xml
          echo "**** Cargo.lock 6"
          cat Cargo.lock

      - name: Publish to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Build App
        run: |
          echo "**** Cargo.lock 7"
          cat Cargo.lock
          cargo install dioxus-cli
          echo "**** Cargo.lock 8"
          cat Cargo.lock
          cargo update
          sed -i 's/version = 4/version = 3/' Cargo.toml
          echo "**** Cargo.lock 9"
          cat Cargo.lock
          dx build --release
  
      - name: Publish App & Documentation
        run: |
          git config --global user.email "nigeleke@users.noreply.github.com"
          git config --global user.name "Nigel Eke"
          export VERSION=$(git describe --abbrev=0 --tags)
          git checkout gh-pages
          rm -rf docs
          mv docs0 docs
          mkdir docs/app/
          mv -R dist/* docs/app/
          git add .
          git commit -m "Release $VERSION"
          git push
